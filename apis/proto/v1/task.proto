syntax = "proto3";

package task;
option go_package = ".;v1";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service TaskService {

  rpc CreateTask(Task) returns (Task){
    option (google.api.http) = {
      post: "/task"
      body: "*"
    };
  }

  rpc GetTask(GetTaskRequest) returns (Task){
    option (google.api.http) = {
      get: "/task"
    };
  }

  rpc UpdateTask(Task) returns (Task){
    option (google.api.http) = {
      put: "/task"
      body: "*"
    };
  }

  rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/task"
    };
  }

  rpc GetLastN(GetLastNRequest) returns (TaskList) {
    option (google.api.http) = {
      get: "/task/filter"
        };
  }

  rpc GetExpired(GetExpiredRequest) returns (TaskList) {
    option (google.api.http) = {
      get: "/task/expired"
    };
  }

}

message Task {
  string task_id = 1;
  int64 created_at = 2;
  string name = 3;
  string description = 4;
  int64 time = 5;
  string user_id = 6;
  string user_email = 7;
}

message GetTaskRequest {
  string task_id = 1;
}

message DeleteTaskRequest {
  string task_id = 1;
}

message GetLastNRequest {
  int32 n = 1;
}

message GetExpiredRequest {}

message TaskList {
  repeated Task tasks = 1;
}


